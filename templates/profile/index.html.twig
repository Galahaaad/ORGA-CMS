{% extends 'base.html.twig' %}

{% block title %}{{ site_name }} : {{ user.username }}{% endblock %}

{% block body %}
    <div class="profile-content flx-row w-100">

    <div class="user-infos flx-row">

        <img class="avatar" src="https://api.habbocity.me/avatar_image.php?user={{ user.username }}&headonly=0&direction=2&head_direction=3&size=l" alt="Avatar">
        <div class="users-details flx-column">
        <h1>{{ user.username }}</h1>
            <span class="rank-box">Administrateur</span>
        <h2>Points : {{ user.points }}</h2>
        <span>Mission : <i>{{ userMotto }}</i></span>
        </div>

    </div>
            <div class="user-last-comment flx-column">

                {% if comments %}
                {% for comment in comments %}
                    <div class="last-comment-content flx-row">
                        <img src="https://api.habbocity.me/avatar_image.php?user={{ user.username }}&headonly=1&direction=2&head_direction=2&size=l" alt="Avatar">
                        <div class="last-comment--content">
                       <h2>{{ comment.articleId }}</h2>
                        <span>{{ comment.content }}</span>
                        </div>
                    </div>
                {% endfor %}
                {% else %}
                    <span class="user-has-nocomment">Cet utilisateur n'a pas de commentaire.</span>
                {% endif %}
            </div>

    </div>

    <div class="user-purse w-100 flx-row">
        <div class="purse-box flx-row">
            <div class="badge-list">
            {% for badge in userBadges %}
                <img src="https://swf.habbocity.me/c_images/album1584/{{ badge.code }}.gif" alt="Badge" class="user-badge">
            {% endfor %}
            </div>
        </div>
        <div class="purse-box diamonds-box flx-row">
            <div class="diamonds-icon"></div>
            <h2>{{ userDiamonds }} diamants</h2>
        </div>
        {% if user.verified %}
            <div class="purse-box user-verified">
                <h2>Cet utilisateur est vérifié</h2>
            </div>
        {% else%}
            <div class="purse-box user-not-verified">
                <h2>Cet utilisateur n'est pas vérifié</h2>
            </div>
        {% endif %}
    </div>
    <div class="netWorth-chart">
    <canvas id="myChart" width="400" height="400"></canvas>
    </div>
{% endblock %}

{% block javascripts %}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.min.js" type="application/javascript"></script>
    <script>
        let labelsArray = [];
        let netWorth = [];
        {% for data in userWealth %}
            labelsArray.push({{ data.date }});
            netWorth.push({{ data.netWorth }});
        {% endfor %}
        var ctx = document.getElementById('myChart').getContext('2d');
        ctx.canvas.width = 1000;
        ctx.canvas.height = 400;
        var myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: labelsArray.reverse(),
                datasets: [{
                    label: 'Richesse totale',
                    data: netWorth.reverse(),
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 3
                }]
            },
            responsive: true,
            options: {
                animation: {
                  duration: 1000,
                  easing: 'easeOutQuart'
                },
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                },
            }
        });
        Chart.defaults.global.defaultFontColor = 'white';
        Chart.defaults.global.defaultFontFamily = 'Ubuntu Condensed';
    </script>

{% endblock %}