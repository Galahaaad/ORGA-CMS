{% extends 'base.html.twig' %}

{% block title %}Hello ProfileController!{% endblock %}

{% block body %}
    <div class="profile-content flx-row w-100">

    <div class="user-infos flx-row">

        <img class="avatar" src="https://api.habbocity.me/avatar_image.php?user={{ user.username }}&headonly=0&direction=2&head_direction=3&size=l" alt="Avatar">
        <div class="users-details flx-column">
        <h1>{{ user.username }}</h1>
            <span class="rank-box">Administrateur</span>
        <h2>Points : {{ user.points }}</h2>
        <span>Mission : <i>{{ userMotto }}</i></span>
        </div>

    </div>
            <div class="user-last-comment flx-column">
                {% for comment in comments %}
                    <div class="last-comment-content flx-row">
                        <img src="https://api.habbocity.me/avatar_image.php?user={{ user.username }}&headonly=1&direction=2&head_direction=2&size=l" alt="Avatar">
                        <div class="last-comment--content">
                       <h2>{{ comment.articleId }}</h2>
                        <span>{{ comment.content }}</span>
                        </div>
                    </div>
                {% endfor %}
            </div>

    </div>

    <canvas id="myChart" width="400" height="400"></canvas>
{% endblock %}

{% block javascripts %}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.min.js" type="application/javascript"></script>
    <script>
        let labelsArray = [];
        let netWorth = [];
        {% for data in userWealth %}
            labelsArray.push({{ data.date }});
            netWorth.push({{ data.netWorth }});
        {% endfor %}
        var ctx = document.getElementById('myChart').getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: labelsArray.reverse(),
                datasets: [{
                    label: 'Richesse totale',
                    data: netWorth.reverse(),
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
    </script>

{% endblock %}